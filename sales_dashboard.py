# -*- coding: utf-8 -*-
"""sales_dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14AsWfdjuaRXLhLF1il0pVzf84OEPD8wa
"""

pip install streamlit pandas plotly

import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="Sales Dashboard", layout="wide")
st.title("📊 Sales Dashboard - Sample Sales Data")

# Upload CSV
uploaded_file = st.file_uploader("/content/sales_data_sample.csv", type=["csv"])
if uploaded_file:
    df = pd.read_csv(uploaded_file, parse_dates=['OrderDate'])

    # Sidebar filters
    st.sidebar.header("Filter Data")

    region = st.sidebar.multiselect("Select Region", options=df['Region'].unique(), default=df['Region'].unique())
    item = st.sidebar.multiselect("Select Product (Item)", options=df['Item'].unique(), default=df['Item'].unique())
    date_range = st.sidebar.date_input("Select Date Range", [df['OrderDate'].min(), df['OrderDate'].max()])

    # Filter data
    filtered_df = df[
        (df['Region'].isin(region)) &
        (df['Item'].isin(item)) &
        (df['OrderDate'] >= pd.to_datetime(date_range[0])) &
        (df['OrderDate'] <= pd.to_datetime(date_range[1]))
    ]

    # Display KPIs
    st.subheader("📈 Key Metrics")
    total_sales = filtered_df['Total'].sum()
    total_units = filtered_df['Units'].sum()
    avg_unit_cost = filtered_df['Unit Cost'].mean()

    col1, col2, col3 = st.columns(3)
    col1.metric("Total Sales ($)", f"{total_sales:,.2f}")
    col2.metric("Total Units Sold", f"{total_units:,}")
    col3.metric("Avg. Unit Cost ($)", f"{avg_unit_cost:,.2f}")

    # Bar chart - Sales by Item
    st.subheader("🔍 Sales by Product (Item)")
    item_sales = filtered_df.groupby("Item")["Total"].sum().reset_index().sort_values(by="Total", ascending=False)
    fig1 = px.bar(item_sales, x="Item", y="Total", color="Item", text_auto=".2s")
    st.plotly_chart(fig1, use_container_width=True)

    # Line chart - Sales over time
    st.subheader("📅 Sales Over Time")
    time_series = filtered_df.groupby("OrderDate")["Total"].sum().reset_index()
    fig2 = px.line(time_series, x="OrderDate", y="Total", markers=True)
    st.plotly_chart(fig2, use_container_width=True)

    # Top 5 Regions
    st.subheader("🌍 Top 5 Performing Regions")
    top_regions = filtered_df.groupby("Region")["Total"].sum().sort_values(ascending=False).head(5).reset_index()
    fig3 = px.bar(top_regions, x="Region", y="Total", color="Region", text_auto=".2s")
    st.plotly_chart(fig3, use_container_width=True)

else:
    st.info("👆 Upload the Kaggle 'sample-sales-data.csv' file to begin.")